name: "Build RabbitMQ"
run-name: "RabbitMQ version ${{ inputs.rabbitmq-tag }}"
on:
  workflow_dispatch:
    inputs:
      rabbitmq-tag:
        description: "RabbitMQ version to build"
        required: true
        default: "v4.1.2"
      tag:
        description: "Tag to create for accets upload"
        required: true
        default: "v4.1.2-patched"
      forceCreate:
        type: boolean
        description: "Override tag name (default: true)"
        required: false
        default: true
permissions:
  contents: write
jobs:
  build-rabbitmq:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create a New Tag
        uses: netcracker/qubership-workflow-hub/actions/tag-action@main
        with:
          ref: ${{ github.ref_name }}
          tag-name: ${{ inputs.tag }}
          force-create: ${{ inputs.forceCreate }}
          switch-to-tag: true
          create-release: true
          skip-checkout: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        run: |
          rm -rf ./*
      - name: "Checkout RabbitMQ tag ${{ github.event.inputs.rabbitmq-tag }}"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.rabbitmq-tag }}
          repository: "rabbitmq/rabbitmq-server"

      - name: Checkout rabbitmq-patches tag ${{ inputs.tag }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
          path: rabbitmq-patches

      - name: Apply patches
        run: |
          cd ${GITHUB_WORKSPACE}
          for p in .rabbitmq-patches/rabbitmq-patches/${{ inputs.kafka-tag }}/*.patch; do
            echo "Applying $pâ€¦"
            git apply -p1 --ignore-space-change --ignore-whitespace "$p"
          done
          rm -rf ./rabbitmq-patches
      - name: "Install pre-requisites"
        run: |
          sudo apt-get update
          # Skip installing pacakge docs {makes the man-db trigger much faster)
          sudo tee /etc/dpkg/dpkg.cfg.d/01_nodoc > /dev/null << 'EOF'
          path-exclude /usr/share/doc/*
          path-exclude /usr/share/man/*
          path-exclude /usr/share/info/*
          EOF
          sudo add-apt-repository ppa:rabbitmq/rabbitmq-erlang
          sudo apt-get update
          sudo apt-get install -y git elixir erlang erlang-nox erlang-src xmlto \
          build-essential debhelper erlang-base erlang-crypto erlang-edoc erlang-eldap \
          erlang-erl-docgen erlang-eunit erlang-inets erlang-mnesia erlang-os-mon \
          erlang-parsetools erlang-public-key erlang-runtime-tools erlang-ssl \
          erlang-syntax-tools erlang-tools erlang-xmerl erlang-dev
          sudo snap install libxslt
      - name: "Build RabbitMQ"
        run: |
          make
#      - name: "Checkout rabbitmq/rabbitmq-packaging"
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.event.inputs.rabbitmq-packaging-version }}
#          repository: "rabbitmq/rabbitmq-packaging"
#          path: rappitmq-packaging
#      - name: "Build RabbitMQ package"
#        run: |
#          make package-deb
#        env:
#          RABBITMQ_PACKAGING_REPO: ./rappitmq-packaging
      - name: "Upload RabbitMQ build artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: rabbitmq-build
          path: "rabbitmq-server/ebin/*"
